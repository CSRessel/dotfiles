
# ----------------------------------------------------------------
# oh-my-zsh settings

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="/Users/resselc/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="robbyrussell"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS=true

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git brew docker helm kubectl tmux vi-mode)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# ----------------------------------------------------------------
# Aliases

alias pr="pipenv run"
alias kc="kubectl"
alias pfaplan="navify-aws-sso-login --login-role-session-duration 28800 --login-role-arn arn:aws:iam::623673916643:role/Roche/Products/PLA/PLADevOps --write-credentials platform-plan-dev"
alias pfapass="navify-aws-sso-login --login-role-session-duration 28800 --login-role-arn arn:aws:iam::651863433406:role/Roche/Products/TTP1/TTP1DevOps --write-credentials platform-pass-dev"
alias pfadp="navify-aws-sso-login --login-role-session-duration 14400 --login-role-arn arn:aws:iam::506107868744:role/Roche/Products/DP/DPEngineering --write-credentials platform-data-project"
alias pfaaims="navify-aws-sso-login --login-role-session-duration 43200 --login-role-arn arn:aws:iam::452835374535:role/Roche/Products/AIMS/AIMSEngineering --write-credentials platform-aims-dev"

alias devchrome="open -n -a /Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --args --user-data-dir='/Users/resselc/Library/Application\ Support/Google/Chrome\ Local\ Dev' --disable-web-security 'http://aims-dev-local.platform.navify.com:8081/'"
alias chrome="open -n -a /Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome"

alias tpp2ing="cd ~/Documents/source/tpp2-service-ingestion && rm -rf .cache/ && INGEST_STATIC_DATA_DIR=static/data/ INGEST_OUT_DIR=output INGEST_SOURCES=all pr python src/ingestion/scripts/ingest_data.py"
alias tpp2exp="cd ~/Documents/source/tpp2-service-ingestion && EXPORTER_SRC_DIR=output EXPORTER_OUT_DIR=exoutput EXPORTER_STATIC_DATA_DIR=static/data/ pr python src/ingestion/scripts/export_json.py"

# ----------------------------------------------------------------
# Useful Functions

function jwt_decode(){
  jq -R 'split(".") | .[1] | @base64d | fromjson' <<< "$1"
}
function jwt_decode_header(){
  jq -R 'split(".") | .[0] | @base64d | fromjson' <<< "$1"
}

# ----------------------------------------------------------------
# Env configuration and hooks for other tooling

eval "$(direnv hook zsh)"

eval "$(pyenv init -)"

export PATH="/usr/local/opt/openjdk/bin:$PATH"
export PATH="/usr/local/opt/openjdk@11/bin:$PATH"
export PATH="/Users/resselc/.local/bin:$PATH"
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
export PATH="/usr/local/opt/terraform@0.13/bin:$PATH"
export PATH=$PATH:~/.porter
export EDITOR="/usr/local/bin/vim"

export OKTA_ORG_NAME=dev-383148
export OKTA_BASE_URL="okta.com"
export OKTA_API_TOKEN="00r3VOaaia0k7fdkOeTppU93Gj4qMFGuoUg71AsnXA"
